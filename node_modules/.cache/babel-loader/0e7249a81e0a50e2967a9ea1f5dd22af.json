{"ast":null,"code":"import _defineProperty from \"/home/martin/Documents/waracle/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { connect } from 'react-redux';\nimport { updateCake } from '../actions/cakeActions';\nimport CakeForm from './EditCake';\nexport var mapStateToProps = function mapStateToProps(state, props) {\n  var cake = state.cake.cakes.get(props.match.params.id);\n  return _objectSpread({}, cake);\n};\nexport default connect(mapStateToProps, {\n  updateCake: updateCake\n})(CakeForm);","map":{"version":3,"sources":["/home/martin/Documents/waracle/src/cake/EditCakeContainer.tsx"],"names":["connect","updateCake","CakeForm","mapStateToProps","state","props","cake","cakes","get","match","params","id"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAyC,aAAzC;AAGA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AAMA,OAAO,IAAMC,eAAsF,GAAG,SAAzFA,eAAyF,CAACC,KAAD,EAAQC,KAAR,EAAkB;AACpH,MAAMC,IAAI,GAAGF,KAAK,CAACE,IAAN,CAAWC,KAAX,CAAiBC,GAAjB,CAAqBH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,EAAxC,CAAb;AAEA,2BACOL,IADP;AAGH,CANM;AAQP,eAAeN,OAAO,CAACG,eAAD,EAAkB;AACpCF,EAAAA,UAAU,EAAVA;AADoC,CAAlB,CAAP,CAEZC,QAFY,CAAf","sourcesContent":["import { connect, MapStateToProps } from 'react-redux';\r\nimport { IStoreState, ICake } from '../types';\r\nimport { RouteComponentProps } from 'react-router';\r\nimport { updateCake } from '../actions/cakeActions';\r\nimport CakeForm from './EditCake';\r\n\r\ninterface IRouteProps {\r\n    id: string;\r\n}\r\n\r\nexport const mapStateToProps: MapStateToProps<ICake, RouteComponentProps<IRouteProps>, IStoreState> = (state, props) => {\r\n    const cake = state.cake.cakes.get(props.match.params.id)!;\r\n\r\n    return {\r\n        ...cake\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    updateCake\r\n})(CakeForm);\r\n"]},"metadata":{},"sourceType":"module"}