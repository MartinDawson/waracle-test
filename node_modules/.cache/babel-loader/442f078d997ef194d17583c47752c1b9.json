{"ast":null,"code":"import _regeneratorRuntime from \"/home/martin/Documents/waracle/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/martin/Documents/waracle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport cakeApi from '../api/cakeApi';\nexport var CAKE_ACTIONS;\n\n(function (CAKE_ACTIONS) {\n  CAKE_ACTIONS[\"ADD_CAKE\"] = \"ADD_CAKE\";\n  CAKE_ACTIONS[\"CAKE_UPDATED\"] = \"CAKE_UPDATED\";\n  CAKE_ACTIONS[\"CAKE_FETCHED\"] = \"CAKE_FETCHED\";\n  CAKE_ACTIONS[\"SET_CAKES\"] = \"SET_CAKES\";\n  CAKE_ACTIONS[\"CAKE_DELETED\"] = \"CAKE_DELETED\";\n})(CAKE_ACTIONS || (CAKE_ACTIONS = {}));\n\nvar addCake = function addCake(cake) {\n  return {\n    type: CAKE_ACTIONS.ADD_CAKE,\n    cake: cake\n  };\n};\n\nvar cakeUpdated = function cakeUpdated(cake) {\n  return {\n    type: CAKE_ACTIONS.CAKE_UPDATED,\n    cake: cake\n  };\n};\n\nvar cakeFetched = function cakeFetched(cake) {\n  return {\n    type: CAKE_ACTIONS.CAKE_FETCHED,\n    cake: cake\n  };\n};\n\nvar setCakes = function setCakes(cakes) {\n  return {\n    type: CAKE_ACTIONS.SET_CAKES,\n    cakes: cakes\n  };\n};\n\nvar cakeDeleted = function cakeDeleted(id) {\n  return {\n    type: CAKE_ACTIONS.CAKE_DELETED,\n    id: id\n  };\n};\n\nexport var updateCake = function updateCake(cake) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return cakeApi.updateCake(cake);\n\n              case 2:\n                dispatch(cakeUpdated(cake));\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var saveCake = function saveCake(cake) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var newCake;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return cakeApi.saveCake(cake);\n\n              case 2:\n                newCake = _context2.sent;\n                dispatch(addCake(newCake));\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getCakes = function getCakes() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var cakes;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return cakeApi.getCakes();\n\n              case 2:\n                cakes = _context3.sent;\n                dispatch(setCakes(cakes));\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var getCake = function getCake(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var cake;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return cakeApi.getCake(id);\n\n              case 2:\n                cake = _context4.sent;\n                dispatch(cakeFetched(cake));\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var deleteCake = function deleteCake(id) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return cakeApi.deleteCake(id);\n\n              case 2:\n                dispatch(cakeDeleted(id));\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/martin/Documents/waracle/src/actions/cakeActions.ts"],"names":["cakeApi","CAKE_ACTIONS","addCake","cake","type","ADD_CAKE","cakeUpdated","CAKE_UPDATED","cakeFetched","CAKE_FETCHED","setCakes","cakes","SET_CAKES","cakeDeleted","id","CAKE_DELETED","updateCake","dispatch","saveCake","newCake","getCakes","getCake","deleteCake"],"mappings":"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","sourcesContent":["import { Dispatch, Action } from 'redux';\nimport { ICake } from '../types';\nimport cakeApi, { SaveCakeInput } from '../api/cakeApi';\n\nexport enum CAKE_ACTIONS {\n    ADD_CAKE = 'ADD_CAKE',\n    CAKE_UPDATED = 'CAKE_UPDATED',\n    CAKE_FETCHED = 'CAKE_FETCHED',\n    SET_CAKES = 'SET_CAKES',\n    CAKE_DELETED = 'CAKE_DELETED'\n}\n\nexport interface IAddCakeAction extends Action<CAKE_ACTIONS.ADD_CAKE> {\n    cake: ICake;\n}\n\nexport interface ICakeUpdatedAction extends Action<CAKE_ACTIONS.CAKE_UPDATED> {\n    cake: ICake;\n}\n\nexport interface ICakeFetchedAction extends Action<CAKE_ACTIONS.CAKE_FETCHED> {\n    cake: ICake;\n}\n\nexport interface ISetCakesAction extends Action<CAKE_ACTIONS.SET_CAKES> {\n    cakes: ICake[];\n}\n\nexport interface ICakeDeletedAction extends Action<CAKE_ACTIONS.CAKE_DELETED> {\n    id: ICake['id'];\n}\n\nexport type ICakeActions = IAddCakeAction | ICakeUpdatedAction | ICakeFetchedAction | ISetCakesAction | ICakeDeletedAction;\n\nconst addCake = (cake: ICake): IAddCakeAction => ({\n    type: CAKE_ACTIONS.ADD_CAKE,\n    cake\n});\n\nconst cakeUpdated = (cake: ICake): ICakeUpdatedAction => ({\n    type: CAKE_ACTIONS.CAKE_UPDATED,\n    cake\n});\n\nconst cakeFetched = (cake: ICake): ICakeFetchedAction => ({\n    type: CAKE_ACTIONS.CAKE_FETCHED,\n    cake\n});\n\nconst setCakes = (cakes: ICake[]): ISetCakesAction => ({\n    type: CAKE_ACTIONS.SET_CAKES,\n    cakes\n});\n\nconst cakeDeleted = (id: ICake['id']): ICakeDeletedAction => ({\n    type: CAKE_ACTIONS.CAKE_DELETED,\n    id\n});\n\nexport const updateCake = (cake: ICake) => {\n    return async (dispatch: Dispatch) => {\n        await cakeApi.updateCake(cake);\n\n        dispatch(cakeUpdated(cake));\n    };\n}\n\nexport const saveCake = (cake: SaveCakeInput) => {\n    return async (dispatch: Dispatch) => {\n        const newCake = await cakeApi.saveCake(cake);\n        \n        dispatch(addCake(newCake));\n    };\n}\n\nexport const getCakes = () => {\n    return async (dispatch: Dispatch) => {\n        const cakes = await cakeApi.getCakes();\n        \n        dispatch(setCakes(cakes));\n    };\n}\n\nexport const getCake = (id: ICake['id']) => {\n    return async (dispatch: Dispatch) => {\n        const cake = await cakeApi.getCake(id);\n        \n        dispatch(cakeFetched(cake));\n    };\n}\n\nexport const deleteCake = (id: ICake['id']) => {\n    return async (dispatch: Dispatch) => {\n        await cakeApi.deleteCake(id);\n\n        dispatch(cakeDeleted(id));\n    };\n}"]},"metadata":{},"sourceType":"module"}