{"ast":null,"code":"import _regeneratorRuntime from \"/home/martin/Documents/waracle/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/martin/Documents/waracle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport var CAKES_BASE_API = '/api/cakes';\nexport default {\n  updateCake: function () {\n    var _updateCake = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(cake) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              axios.put(\"\".concat(CAKES_BASE_API, \"/cakes/\").concat(cake.id), {\n                cake: cake\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function updateCake(_x) {\n      return _updateCake.apply(this, arguments);\n    }\n\n    return updateCake;\n  }(),\n  saveCake: function () {\n    var _saveCake = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(cake) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post(\"\".concat(CAKES_BASE_API), {\n                cake: cake\n              });\n\n            case 2:\n              response = _context2.sent;\n              return _context2.abrupt(\"return\", response.data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function saveCake(_x2) {\n      return _saveCake.apply(this, arguments);\n    }\n\n    return saveCake;\n  }(),\n  getCakes: function () {\n    var _getCakes = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.get(\"\".concat(CAKES_BASE_API));\n\n            case 2:\n              response = _context3.sent;\n              return _context3.abrupt(\"return\", response.data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function getCakes() {\n      return _getCakes.apply(this, arguments);\n    }\n\n    return getCakes;\n  }(),\n  getCake: function () {\n    var _getCake = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(id) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.get(\"\".concat(CAKES_BASE_API, \"/cake/\").concat(id));\n\n            case 2:\n              response = _context4.sent;\n              return _context4.abrupt(\"return\", response.data);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getCake(_x3) {\n      return _getCake.apply(this, arguments);\n    }\n\n    return getCake;\n  }(),\n  deleteCake: function () {\n    var _deleteCake = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(id) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              axios.delete(\"\".concat(CAKES_BASE_API, \"/\").concat(id));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function deleteCake(_x4) {\n      return _deleteCake.apply(this, arguments);\n    }\n\n    return deleteCake;\n  }()\n};","map":{"version":3,"sources":["/home/martin/Documents/waracle/src/api/cakeApi.tsx"],"names":["axios","CAKES_BASE_API","updateCake","cake","put","id","saveCake","post","response","data","getCakes","get","getCake","deleteCake","delete"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,cAAc,GAAG,YAAvB;AAIP,eAAe;AACXC,EAAAA,UAAU;AAAA;AAAA;AAAA,6BAAE,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AACRH,cAAAA,KAAK,CAACI,GAAN,WAAaH,cAAb,oBAAqCE,IAAI,CAACE,EAA1C,GAAgD;AAC5CF,gBAAAA,IAAI,EAAJA;AAD4C,eAAhD;;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADC;AAMXG,EAAAA,QAAQ;AAAA;AAAA;AAAA,6BAAE,kBAAOH,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBH,KAAK,CAACO,IAAN,WAAcN,cAAd,GAAgC;AACnDE,gBAAAA,IAAI,EAAJA;AADmD,eAAhC,CADjB;;AAAA;AACAK,cAAAA,QADA;AAAA,gDAKCA,QAAQ,CAACC,IALV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KANG;AAaXC,EAAAA,QAAQ;AAAA;AAAA;AAAA,6BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACiBV,KAAK,CAACW,GAAN,WAAsBV,cAAtB,EADjB;;AAAA;AACAO,cAAAA,QADA;AAAA,gDAGCA,QAAQ,CAACC,IAHV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAbG;AAkBXG,EAAAA,OAAO;AAAA;AAAA;AAAA,6BAAE,kBAAOP,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACkBL,KAAK,CAACW,GAAN,WAAoBV,cAApB,mBAA2CI,EAA3C,EADlB;;AAAA;AACCG,cAAAA,QADD;AAAA,gDAGEA,QAAQ,CAACC,IAHX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAlBI;AAuBXI,EAAAA,UAAU;AAAA;AAAA;AAAA,6BAAE,kBAAOR,EAAP;AAAA;AAAA;AAAA;AAAA;AACRL,cAAAA,KAAK,CAACc,MAAN,WAAgBb,cAAhB,cAAkCI,EAAlC;;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAvBC,CAAf","sourcesContent":["import axios from 'axios';\nimport { ICake } from '../types';\n\nexport const CAKES_BASE_API = '/api/cakes';\n\nexport type SaveCakeInput = Omit<ICake, 'id'>;\n\nexport default {\n    updateCake: async (cake: ICake) => {\n        axios.put(`${CAKES_BASE_API}/cakes/${cake.id}`, {\n            cake\n        });\n    },\n    saveCake: async (cake: SaveCakeInput): Promise<ICake> => {\n        const response = await axios.post(`${CAKES_BASE_API}`, {\n            cake\n        });\n\n        return response.data;\n    },\n    getCakes: async (): Promise<ICake[]> => {\n        const response = await axios.get<ICake[]>(`${CAKES_BASE_API}`);\n\n        return response.data;\n    },\n    getCake: async (id: string): Promise<ICake> => {\n        const response = await axios.get<ICake>(`${CAKES_BASE_API}/cake/${id}`);\n\n        return response.data;\n    },\n    deleteCake: async (id: string) => {\n        axios.delete(`${CAKES_BASE_API}/${id}`);\n    },\n}"]},"metadata":{},"sourceType":"module"}